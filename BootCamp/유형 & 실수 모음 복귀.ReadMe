
* 자주 실수 하는 부분
- 시간 Count
 - 0부터 시작할건지, 1부터 시작할건지.

- Map
 - 좌표 범위
 - 가로, 세로 헷갈리는 것
 - Map으로 안주어지고 좌표로 주어질 때 도 있음
 - 그냥 그림으로 주어졌을 때, Map으로 해석 가능.
 - Char 인지 Int 인지 확인
 
- Vector
 - for문에서 unsigned inter 로 지정 (ex for (unsigned int i=0; i<...))
 - index 뒤에 있을수록 최신
 - find 할 수 있음
 
- Queue
  - push 언제할지, pop 언제 할지
  
- Struct
  - 안에 너무 많은 인자 들어가면, 생각해보기.
 
- Map
  - Key, Value로 활용 가능.

- 자료 구조
 - 너무 복잡하게 하지 않을것 ex) vector 안에 struct 안에 vector.. (디버깅 하기 어려움)
 
 
* 활용
- Use 배열, Visited 배열 (1차원, 2차원)
(Index로 바로 접근해서 O(1))

- Map 양방향

* 코딩 관점
- 날짜, 요일 -> 형변환해서 쉽게 풀 수도 있음.
- 계속 더해서 나가기
- 계속 cout 하기 (내가 원하는 방향으로 구현하고 있는지)

* 문제 이해
 - N이 많이 크면, Queue나 Stack으로 접근?
 - N이 많이 작으면, DFS나 BFS 고려.
